import pandas as pd
import numpy as np
import dask.dataframe as dd
from sklearn import preprocessing
from tqdm import tqdm 
import warnings, sys

if not sys.warnoptions:
    warnings.simplefilter("ignore")


def test_frequency_encoding(df_encoded, list_frequency_encoding, original_counts_dict):
    for feature in tqdm(list_frequency_encoding):
        original_counts = original_counts_dict[feature]

        # Compare the original counts with the encoded values
        comparison = df_encoded[[feature, f'{feature}_encoded']].merge(original_counts, left_on=feature, right_on='value', how='left')
        comparison_sorted = comparison.sort_values(by='count', ascending=True)
        print(comparison_sorted.head()) 

        # Check that all values that occur only once are assigned the same encoded value
        single_occurrence_values = comparison_sorted[comparison_sorted['count'] == 1]
        unique_encoded_values = single_occurrence_values[f'{feature}_encoded'].unique()

        assert len(unique_encoded_values) == 1, f"Test failed for {feature}. Multiple encoded values found for single occurrence values."

        print(f"Test passed for {feature}")
